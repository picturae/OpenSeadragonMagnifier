{"version":3,"file":"openseadragonmagnifier.js","sources":["../src/magnifier.js"],"sourcesContent":["(function ($) {\n    'use strict';\n\n    if (!$.version || $.version.major < 2) {\n        throw new Error('This version of Magnifier requires OpenSeadragon version 2.0.0+');\n    }\n\n    $.Viewer.prototype.magnifier = function (options) {\n        if (!this.magnifierInstance || options) {\n            options = options || {};\n            options.viewer = this;\n            this.magnifierInstance = new $.Magnifier(options);\n        }\n        return this.magnifierInstance;\n    };\n\n    /**\n     * @typedef MagnifierOptions\n     * @property {number} sizeRatio\n     * @property {number=} viewerWidth Initial viewer width\n     * @property {number=} viewerHeight Initial viewer height\n     * @property {number=} minPixelRatio\n     * @property {number=} defaultZoomLevel Initial zoom level for the viewer\n     * @property {number} [minZoomLevel=1]\n     * @property {string} [keyboardShortcut='m'] The default keyboard shortcut to toggle the mangnifier.\n     * @property {'topLeft' | 'full'} [regionMoveHandle='topLeft'] Controls the size of the area that can be used to\n     * move the region around.\n     * @property {boolean} [showMagnifierControl=false] Whether to show a button for toggling the magnifier.\n     * @property {string | HTMLElement} magnifierButton\n     * @property {boolean} [autoResize=true] Whether to automatically resize the inner magnifier view.\n     * @property {boolean} [moveMagnifier=false] Initial value for whether to allow moving the magnifier window.\n     * @property {string} navImages.magnifier.REST\n     * @property {string} navImages.magnifier.GROUP\n     * @property {string} navImages.magnifier.HOVER\n     * @property {string} navImages.magnifier.DOWN\n     */\n\n    /**\n     * @class Magnifier\n     * @classdesc Allows to view part of the image magnified.\n     * @memberof OpenSeadragon\n     * @param {MagnifierOptions} options\n     */\n    $.Magnifier = function (options) {\n        const viewer = options.viewer;\n        const self = this;\n        let viewerSize;\n        let magnifierSize;\n\n        //We may need to create a new element and id if they did not\n        //provide the id for the existing element\n        if (!options.id) {\n            options.id = 'magnifier-' + $.now();\n            this.element = $.makeNeutralElement('div');\n            options.controlOptions = $.extend(true, {\n                anchor: $.ControlAnchor.BOTTOM_RIGHT,\n                attachToViewer: true,\n                autoFade: false\n            }, options.controlOptions || {});\n\n            if (options.position) {\n                if ('BOTTOM_RIGHT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n                } else if ('BOTTOM_LEFT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n                } else if ('TOP_RIGHT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n                } else if ('TOP_LEFT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n                } else if ('ABSOLUTE' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n                    options.controlOptions.top = options.top;\n                    options.controlOptions.left = options.left;\n                    options.controlOptions.height = options.height;\n                    options.controlOptions.width = options.width;\n                }\n            }\n\n        } else {\n            this.element = document.getElementById(options.id);\n            options.controlOptions = $.extend(true, {\n                anchor: $.ControlAnchor.NONE,\n                attachToViewer: false,\n                autoFade: false,\n            }, options.controlOptions || {});\n        }\n        this.element.id = options.id;\n        this.element.className += ' magnifier';\n\n        options = $.extend(true, {\n            sizeRatio: 0.2,\n            magnifierRotate: true, // @TODO\n            viewerWidth: null,\n            viewerHeight: null,\n            minPixelRatio: viewer.minPixelRatio,\n            defaultZoomLevel: viewer.viewport.getZoom(true) * 2,\n            minZoomLevel: 1,\n            keyboardShortcut: 'm',\n            moveMagnifier: false,\n            navImages: {\n                magnifier: {\n                    REST: 'selection_rest.png',\n                    GROUP: 'selection_grouphover.png',\n                    HOVER: 'selection_hover.png',\n                    DOWN: 'selection_pressed.png'\n                }\n            }\n        }, options, {\n            element: this.element,\n            tabIndex: -1, // No keyboard navigation, omit from tab order\n            //These need to be overridden to prevent recursion since\n            //the magnifier is a viewer and a viewer has a magnifier/navigator\n            showNavigator: false,\n            showNavigationControl: false,\n            showSequenceControl: false,\n            magnifier: null,\n            immediateRender: true,\n            blendTime: 0,\n            animationTime: 0,\n            autoResize: options.autoResize,\n            // prevent resizing the magnifier from adding unwanted space around the image\n            minZoomImageRatio: 1.0,\n        });\n\n        $.setElementTouchActionNone(this.element);\n\n        this.borderWidth = 2;\n        this.viewerWidth = options.viewerWidth;\n        this.viewerHeight = options.viewerHeight;\n\n        //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n        //be a one pixel gap.\n        this.fudge = new $.Point(1, 1);\n        this.totalBorderWidths = new $.Point(this.borderWidth * 2, this.borderWidth * 2).minus(this.fudge);\n\n        if (options.showMagnifierControl || options.magnifierButton) {\n            const prefix = options.prefixUrl || '';\n            const useGroup = viewer.buttons && viewer.buttons.buttons;\n            const anyButton = useGroup ? viewer.buttons.buttons[0] : null;\n            const onFocusHandler = anyButton ? anyButton.onFocus : null;\n            const onBlurHandler = anyButton ? anyButton.onBlur : null;\n\n            viewer.magnifierButton = new $.Button({\n                element: options.magnifierButton ? $.getElement(options.magnifierButton) : null,\n                clickTimeThreshold: viewer.clickTimeThreshold,\n                clickDistThreshold: viewer.clickDistThreshold,\n                tooltip: $.getString('Tooltips.SelectionToggle') || 'Toggle selection',\n                srcRest: prefix + options.navImages.magnifier.REST,\n                srcGroup: prefix + options.navImages.magnifier.GROUP,\n                srcHover: prefix + options.navImages.magnifier.HOVER,\n                srcDown: prefix + options.navImages.magnifier.DOWN,\n                onRelease: this.toggleVisibility.bind(this),\n                onFocus: onFocusHandler,\n                onBlur: onBlurHandler\n            });\n        }\n\n        if (options.controlOptions.anchor !== $.ControlAnchor.NONE) {\n            (function (style, borderWidth) {\n                style.margin = '0px';\n                style.border = borderWidth + 'px solid #555';\n                style.padding = '0px';\n                style.background = '#000';\n                style.overflow = 'hidden';\n                style.minWidth = '50px';\n                style.minHeight = '50px';\n            }(this.element.style, this.borderWidth));\n        }\n\n        this.magnifierResizeHandle = $.makeNeutralElement('div');\n        this.magnifierResizeHandle.id = this.element.id + '-magnifier-resize';\n        this.magnifierResizeHandle.className = 'magnifier-resize';\n        this.magnifierResizeHandle.style.position = 'absolute';\n        this.magnifierResizeHandle.style.top = '-1px';\n        this.magnifierResizeHandle.style.left = '-1px';\n        this.magnifierResizeHandle.style.width = '10%';\n        this.magnifierResizeHandle.style.height = '10%';\n        this.magnifierResizeHandle.style.maxWidth = '50px';\n        this.magnifierResizeHandle.style.maxHeight = '50px';\n        this.magnifierResizeHandle.style.cursor = 'nw-resize';\n        this.magnifierResizeHandle.style.zIndex = '5'; // we need to be on top of OpenSeadragon\n\n        new $.MouseTracker({\n            element: this.magnifierResizeHandle,\n            dragHandler: $.delegate(this, function (event) {\n                const viewerSize = $.getElementSize(this.viewer.element);\n                let newWidth = parseInt(this.element.style.width, 10) - event.delta.x;\n                newWidth = Math.min(newWidth, viewerSize.x * .75);\n                newWidth = Math.max(newWidth, parseInt(this.element.style.minWidth, 10));\n                this.element.style.width = newWidth + 'px';\n                let newHeight = parseInt(this.element.style.height, 10) - event.delta.y;\n                newHeight = Math.min(newHeight, viewerSize.y * .75);\n                newHeight = Math.max(newHeight, parseInt(this.element.style.minHeight, 10));\n                this.element.style.height = newHeight + 'px';\n            }),\n        });\n\n        this.element.appendChild(this.magnifierResizeHandle);\n\n        this.magnifierMoveHandle = $.makeNeutralElement('div');\n        this.magnifierMoveHandle.id = this.element.id + '-magnifier-move';\n        this.magnifierMoveHandle.className = 'magnifier-move';\n        this.magnifierMoveHandle.style.display = options.moveMagnifier ? 'block' : 'none';\n        this.magnifierMoveHandle.style.position = 'absolute';\n        this.magnifierMoveHandle.style.top = '-1px';\n        this.magnifierMoveHandle.style.left = '-1px';\n        this.magnifierMoveHandle.style.width = '100%';\n        this.magnifierMoveHandle.style.height = '100%';\n        this.magnifierMoveHandle.style.cursor = 'move';\n        this.magnifierMoveHandle.style.zIndex = '4'; // we need to be on top of OpenSeadragon\n\n        new $.MouseTracker({\n            element: this.magnifierMoveHandle,\n            dragHandler: (event) => {\n                let right = Number(this.element.style.right.replace('px', ''));\n                let bottom = Number(this.element.style.bottom.replace('px', ''));\n\n                const clientRect = this.element.getBoundingClientRect();\n                const canvasRect = viewer.canvas.getBoundingClientRect();\n\n                const maxRight = canvasRect.width - clientRect.width;\n                const maxBottom = canvasRect.height - clientRect.height;\n\n                // Where is Math.clamp when you need it.\n                right = Math.min(Math.max(right - event.delta.x, 0), maxRight);\n                bottom = Math.min(Math.max(bottom - event.delta.y, 0), maxBottom);\n\n                this.element.style.right = right + 'px';\n                this.element.style.bottom = bottom + 'px';\n            },\n        });\n\n        this.element.appendChild(this.magnifierMoveHandle);\n\n        this.displayRegion = $.makeNeutralElement('div');\n        this.displayRegion.id = this.element.id + '-displayregion';\n        this.displayRegion.className = 'displayregion';\n\n        (function (style, borderWidth) {\n            style.position = 'absolute';\n            style.border = borderWidth + 'px solid #900';\n            style.margin = '0px';\n            style.padding = '0px';\n        }(this.displayRegion.style, this.borderWidth));\n\n        this.regionMoveHangle = $.makeNeutralElement('div');\n        this.regionMoveHangle.id = this.element.id + '-displayregion-move';\n        this.regionMoveHangle.className = 'displayregion-move';\n\n        switch (options.regionMoveHandle) {\n            case 'topLeft': {\n                this.regionMoveHangle.style.width = '10%';\n                this.regionMoveHangle.style.height = '10%';\n                this.regionMoveHangle.style.maxWidth = '50px';\n                this.regionMoveHangle.style.maxHeight = '50px';\n                break;\n            }\n\n            case 'full': {\n                this.regionMoveHangle.style.width = '100%';\n                this.regionMoveHangle.style.height = '100%';\n                break;\n            }\n        }\n\n        this.regionMoveHangle.style.cursor = 'move';\n        new $.MouseTracker({\n            element: this.regionMoveHangle,\n            dragHandler: $.delegate(this, moveRegion),\n        });\n\n        this.regionResizeHangle = $.makeNeutralElement('div');\n        this.regionResizeHangle.id = this.element.id + '-displayregion-move';\n        this.regionResizeHangle.className = 'displayregion-move';\n        this.regionResizeHangle.style.position = 'absolute';\n        this.regionResizeHangle.style.bottom = '-1px';\n        this.regionResizeHangle.style.right = '-1px';\n        this.regionResizeHangle.style.width = '10%';\n        this.regionResizeHangle.style.height = '10%';\n        this.regionResizeHangle.style.maxWidth = '50px';\n        this.regionResizeHangle.style.maxHeight = '50px';\n        this.regionResizeHangle.style.cursor = 'se-resize';\n        new $.MouseTracker({\n            element: this.regionResizeHangle,\n            dragHandler: $.delegate(this, resizeRegion),\n        });\n\n        this.displayRegionContainer = $.makeNeutralElement('div');\n        this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n        this.displayRegionContainer.className = 'displayregioncontainer';\n        this.displayRegionContainer.style.width = '0';\n        this.displayRegionContainer.style.height = '0';\n\n        viewer.addControl(\n            this.element,\n            options.controlOptions\n        );\n\n        this._resizeWithViewer = options.controlOptions.anchor !== $.ControlAnchor.ABSOLUTE &&\n            options.controlOptions.anchor !== $.ControlAnchor.NONE;\n\n        if (this._resizeWithViewer) {\n            if (options.width && options.height) {\n                this.element.style.height = typeof (options.height) === 'number' ? (options.height + 'px') : options.height;\n                this.element.style.width = typeof (options.width) === 'number' ? (options.width + 'px') : options.width;\n            } else {\n                viewerSize = $.getElementSize(viewer.element);\n                this.element.style.height = Math.round(viewerSize.y * options.sizeRatio) + 'px';\n                this.element.style.width = Math.round(viewerSize.x * options.sizeRatio) + 'px';\n                this.oldViewerSize = viewerSize;\n            }\n            magnifierSize = $.getElementSize(this.element);\n            this.elementArea = magnifierSize.x * magnifierSize.y;\n        }\n\n        this.oldContainerSize = new $.Point(0, 0);\n\n        $.Viewer.apply(this, [options]);\n\n        this.displayRegion.appendChild(this.regionMoveHangle);\n        this.displayRegion.appendChild(this.regionResizeHangle);\n        this.displayRegionContainer.appendChild(this.displayRegion);\n        viewer.canvas.appendChild(this.displayRegionContainer);\n\n        if (this.keyboardShortcut) {\n            $.addEvent(\n                this.viewer.container,\n                'keypress',\n                $.delegate(this, onKeyPress),\n                false\n            );\n        }\n\n        if (options.magnifierRotate) {\n            viewer.addHandler('rotate', function (args) {\n                const center = viewer.viewport.pixelFromPoint(viewer.viewport.getCenter(), true);\n                self.displayRegionContainer.style.transformOrigin = center.x + 'px ' + center.y + 'px';\n                _setTransformRotate(self.displayRegionContainer, args.degrees);\n                _setTransformRotate(self.displayRegion, -args.degrees);\n                self.viewport.setRotation(args.degrees);\n            });\n        }\n\n        this.addHandler('reset-size', function () {\n            if (self.viewport) {\n                self.viewport.goHome(true);\n            }\n        });\n\n        this.addHandler('update-level', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.addHandler('update-level', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.addHandler('close', function () {\n            self.close();\n        });\n\n        viewer.addHandler('full-page', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.addHandler('full-screen', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.world.addHandler('update-viewport', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.world.addHandler('item-index-change', function (event) {\n            const item = self.world.getItemAt(event.previousIndex);\n            self.world.setItemIndex(item, event.newIndex);\n        });\n\n        viewer.world.addHandler('remove-item', function (event) {\n            const theirItem = event.item;\n            const myItem = self._getMatchingItem(theirItem);\n            if (myItem) {\n                self.world.removeItem(myItem);\n            }\n        });\n\n        this.storedBounds = null;\n\n        _setTiledImages(this, viewer);\n\n        this.update(viewer.viewport);\n\n    };\n\n    $.extend($.Magnifier.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Magnifier.prototype */{\n\n        /**\n         * Used to notify the magnifier when its size has changed.\n         * Especially useful when {@link OpenSeadragon.Options}.magnifierAutoResize is set to false and the magnifier is resizable.\n         * @function\n         */\n        updateSize: function () {\n            if (this.viewport) {\n                const containerSize = new $.Point(\n                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n                );\n\n                if (!containerSize.equals(this.oldContainerSize)) {\n                    this.viewport.resize(containerSize, true);\n                    this.viewport.goHome(true);\n                    this.oldContainerSize = containerSize;\n                    this.drawer.clear();\n                    this.world.draw();\n                }\n            }\n        },\n\n        /**\n         * Used to update the magnifier's viewport rectangle when a change in the viewer's viewport occurs.\n         * @function\n         * @param {OpenSeadragon.Viewport} viewport viewport this magnifier is tracking.\n         */\n        update: function (viewport) {\n            const viewerSize = $.getElementSize(this.viewer.element);\n            if (this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals(this.oldViewerSize)) {\n                let newWidth;\n                let newHeight;\n                this.oldViewerSize = viewerSize;\n\n                if (this.maintainSizeRatio || !this.elementArea) {\n                    newWidth = viewerSize.x * this.sizeRatio;\n                    newHeight = viewerSize.y * this.sizeRatio;\n                } else {\n                    newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n                    newHeight = this.elementArea / newWidth;\n                }\n\n                // When dimensions are suplied with the plugin options\n                if (this.viewerWidth && this.viewerHeight) {\n                    newWidth = this.viewerWidth;\n                    newHeight = this.viewerHeight;\n                }\n\n                this.element.style.width = Math.round(newWidth) + 'px';\n                this.element.style.height = Math.round(newHeight) + 'px';\n\n                if (!this.elementArea) {\n                    this.elementArea = newWidth * newHeight;\n                }\n\n                this.updateSize();\n            }\n\n            if (viewport && this.viewport) {\n                const bounds = this.viewport.getBounds(true);\n                const topLeft = viewport.pixelFromPoint(bounds.getTopLeft(), true);\n                const bottomRight = viewport.pixelFromPoint(bounds.getBottomRight(), true)\n                    .minus(this.totalBorderWidths);\n\n                //update style for magnifier-box\n                const style = this.displayRegion.style;\n                style.display = this.world.getItemCount() ? 'block' : 'none';\n\n                style.top = Math.round(topLeft.y) + 'px';\n                style.left = Math.round(topLeft.x) + 'px';\n\n                const width = Math.abs(topLeft.x - bottomRight.x);\n                const height = Math.abs(topLeft.y - bottomRight.y);\n                // make sure width and height are non-negative so IE doesn't throw\n                style.width = Math.round(Math.max(width, 0)) + 'px';\n                style.height = Math.round(Math.max(height, 0)) + 'px';\n\n                this.storedBounds = bounds;\n            }\n\n        },\n\n        // overrides Viewer.addTiledImage\n        addTiledImage: function (options) {\n            const _this = this;\n\n            const original = options.originalTiledImage;\n            delete options.original;\n\n            const optionsClone = $.extend({}, options, {\n                success: function (event) {\n                    const myItem = event.item;\n                    myItem._originalForNavigator = original;\n                    _this._matchBounds(myItem, original, true);\n\n                    original.addHandler('bounds-change', function () {\n                        _this._matchBounds(myItem, original);\n                    });\n                }\n            });\n\n            return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n        },\n\n        toggleVisibility: function () {\n            toggleBlockElement(this.element);\n            toggleBlockElement(this.displayRegionContainer);\n            return this;\n        },\n\n        /**\n         * Enables moving the magnifier itself.\n         */\n        startMagnifierMove() {\n            this.magnifierMoveHandle.style.display = 'block';\n        },\n\n        /**\n         * Disables moving the magnifier itself.\n         */\n        stopMagnifierMove() {\n            this.magnifierMoveHandle.style.display = 'none';\n        },\n\n        // private\n        _getMatchingItem: function (theirItem) {\n            const count = this.world.getItemCount();\n            let item;\n\n            for (let i = 0; i < count; i++) {\n                item = this.world.getItemAt(i);\n                if (item._originalForNavigator === theirItem) {\n                    return item;\n                }\n            }\n\n            return null;\n        },\n\n        // private\n        _matchBounds: function (myItem, theirItem, immediately) {\n            const bounds = theirItem.getBounds();\n            myItem.setPosition(bounds.getTopLeft(), immediately);\n            myItem.setWidth(bounds.width, immediately);\n        }\n    });\n\n    /**\n     * @function\n     * @private\n     * @param {Object} element\n     * @param {Number} degrees\n     */\n    function _setTransformRotate(element, degrees) {\n        element.style.webkitTransform = 'rotate(' + degrees + 'deg)';\n        element.style.mozTransform = 'rotate(' + degrees + 'deg)';\n        element.style.msTransform = 'rotate(' + degrees + 'deg)';\n        element.style.oTransform = 'rotate(' + degrees + 'deg)';\n        element.style.transform = 'rotate(' + degrees + 'deg)';\n    }\n\n    function _setTiledImages(magnifier, viewer) {\n        let tiledImage;\n\n        for (let i = 0; i < viewer.world.getItemCount(); i++) {\n            tiledImage = viewer.world.getItemAt(i);\n            magnifier.world.addItem(cloneTiledImage(magnifier, tiledImage), {});\n        }\n\n        viewer.world.addHandler('add-item', function (event) {\n            magnifier.world.addItem(cloneTiledImage(magnifier, event.item), {\n                index: viewer.world.getIndexOfItem(event.item)\n            });\n\n            if (magnifier.storedBounds) {\n                magnifier.viewport.fitBounds(magnifier.storedBounds, true);\n            }\n        });\n    }\n\n    function cloneTiledImage(magnifier, tiledImage) {\n        const myItem = new $.TiledImage({\n            viewer: magnifier,\n            source: tiledImage.source,\n            viewport: magnifier.viewport,\n            drawer: magnifier.drawer,\n            tileCache: tiledImage._tileCache,\n            imageLoader: tiledImage._imageLoader,\n            clip: tiledImage._clip,\n            placeholderFillStyle: tiledImage.placeholderFillStyle,\n            opacity: tiledImage.opacity,\n            springStiffness: magnifier.springStiffness,\n            animationTime: magnifier.animationTime,\n            minZoomImageRatio: magnifier.minZoomImageRatio,\n            wrapHorizontal: magnifier.wrapHorizontal,\n            wrapVertical: magnifier.wrapVertical,\n            immediateRender: magnifier.immediateRender,\n            blendTime: magnifier.blendTime,\n            alwaysBlend: magnifier.alwaysBlend,\n            minPixelRatio: magnifier.minPixelRatio,\n            smoothTileEdgesMinZoom: magnifier.smoothTileEdgesMinZoom,\n            crossOriginPolicy: magnifier.crossOriginPolicy,\n            debugMode: magnifier.debugMode\n        });\n        myItem._originalForNavigator = tiledImage;\n        magnifier._matchBounds(myItem, tiledImage, true);\n\n        tiledImage.addHandler('bounds-change', function () {\n            magnifier._matchBounds(myItem, tiledImage);\n        });\n\n        return myItem;\n    }\n\n    function moveRegion(event) {\n        if (this.viewport) {\n            if (!this.panHorizontal) {\n                event.delta.x = 0;\n            }\n            if (!this.panVertical) {\n                event.delta.y = 0;\n            }\n            this.viewport.panBy(\n                this.viewer.viewport.deltaPointsFromPixels(\n                    event.delta\n                ),\n                true\n            );\n\n            // store position\n        }\n    }\n\n    function resizeRegion(event) {\n        const bounds = this.viewport.getBounds(true);\n        const topLeft = this.viewer.viewport.pixelFromPoint(bounds.getTopLeft(), true);\n        const bottomRight = this.viewer.viewport\n            .pixelFromPoint(bounds.getBottomRight(), true)\n            .minus(this.totalBorderWidths);\n\n        const width = Math.abs(topLeft.x - bottomRight.x);\n        const height = Math.abs(topLeft.y - bottomRight.y);\n        const delta = (event.delta.x / width) + (event.delta.y / height);\n        const zoom = this.viewport.getZoom(true) * (1 - delta);\n\n        if (zoom > this.minZoomImageRatio && zoom < this.viewport.getMaxZoom()) {\n            this.viewport.zoomTo(zoom, undefined, true);\n        }\n    }\n\n    function onKeyPress(e) {\n        const key = e.keyCode || e.charCode;\n        if (String.fromCharCode(key) === this.keyboardShortcut) {\n            this.toggleVisibility();\n        }\n    }\n\n    function toggleBlockElement(el) {\n        el.style.display = el.style.display === 'none' ? 'block' : 'none';\n    }\n\n})(OpenSeadragon);\n"],"names":["$","version","major","Error","_setTransformRotate","element","degrees","style","webkitTransform","mozTransform","msTransform","oTransform","transform","cloneTiledImage","magnifier","tiledImage","myItem","TiledImage","viewer","source","viewport","drawer","tileCache","_tileCache","imageLoader","_imageLoader","clip","_clip","placeholderFillStyle","opacity","springStiffness","animationTime","minZoomImageRatio","wrapHorizontal","wrapVertical","immediateRender","blendTime","alwaysBlend","minPixelRatio","smoothTileEdgesMinZoom","crossOriginPolicy","debugMode","_originalForNavigator","_matchBounds","addHandler","moveRegion","event","this","panHorizontal","delta","x","panVertical","y","panBy","deltaPointsFromPixels","resizeRegion","bounds","getBounds","topLeft","pixelFromPoint","getTopLeft","bottomRight","getBottomRight","minus","totalBorderWidths","width","Math","abs","height","zoom","getZoom","getMaxZoom","zoomTo","undefined","onKeyPress","e","key","keyCode","charCode","String","fromCharCode","keyboardShortcut","toggleVisibility","toggleBlockElement","el","display","Viewer","prototype","options","magnifierInstance","Magnifier","self","viewerSize","magnifierSize","id","document","getElementById","controlOptions","extend","anchor","ControlAnchor","NONE","attachToViewer","autoFade","now","makeNeutralElement","BOTTOM_RIGHT","position","BOTTOM_LEFT","TOP_RIGHT","TOP_LEFT","ABSOLUTE","top","left","className","sizeRatio","magnifierRotate","viewerWidth","viewerHeight","defaultZoomLevel","minZoomLevel","moveMagnifier","navImages","REST","GROUP","HOVER","DOWN","tabIndex","showNavigator","showNavigationControl","showSequenceControl","autoResize","setElementTouchActionNone","borderWidth","fudge","Point","showMagnifierControl","magnifierButton","prefix","prefixUrl","anyButton","buttons","onFocusHandler","onFocus","onBlurHandler","onBlur","Button","getElement","clickTimeThreshold","clickDistThreshold","tooltip","getString","srcRest","srcGroup","srcHover","srcDown","onRelease","bind","margin","border","padding","background","overflow","minWidth","minHeight","magnifierResizeHandle","maxWidth","maxHeight","cursor","zIndex","MouseTracker","dragHandler","delegate","getElementSize","newWidth","parseInt","min","max","newHeight","appendChild","magnifierMoveHandle","right","Number","replace","bottom","clientRect","getBoundingClientRect","canvasRect","canvas","maxRight","maxBottom","displayRegion","regionMoveHangle","regionMoveHandle","regionResizeHangle","displayRegionContainer","addControl","_resizeWithViewer","round","oldViewerSize","elementArea","oldContainerSize","apply","addEvent","container","args","center","getCenter","transformOrigin","setRotation","goHome","update","close","world","item","getItemAt","previousIndex","setItemIndex","newIndex","theirItem","_getMatchingItem","removeItem","storedBounds","i","getItemCount","addItem","index","getIndexOfItem","fitBounds","_setTiledImages","updateSize","containerSize","clientWidth","clientHeight","equals","resize","clear","draw","maintainSizeRatio","sqrt","addTiledImage","_this","original","originalTiledImage","optionsClone","success","[object Object]","count","immediately","setPosition","setWidth","OpenSeadragon"],"mappings":"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"}
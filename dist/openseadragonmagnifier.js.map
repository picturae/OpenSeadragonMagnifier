{"version":3,"file":"openseadragonmagnifier.js","sources":["../src/magnifier.js"],"sourcesContent":["(function ($) {\n    'use strict';\n\n    if (!$.version || $.version.major < 2) {\n        throw new Error('This version of Magnifier requires OpenSeadragon version 2.0.0+');\n    }\n\n    $.Viewer.prototype.magnifier = function (options) {\n        if (!this.magnifierInstance || options) {\n            options = options || {};\n            options.viewer = this;\n            this.magnifierInstance = new $.Magnifier(options);\n        }\n        return this.magnifierInstance;\n    };\n\n    /**\n     * @typedef MagnifierPublicOptions\n     * @property {number} sizeRatio\n     * @property {string=} prefixUrl Prefix URL to use for control images.\n     * @property {number=} viewerWidth Initial viewer width\n     * @property {number=} viewerHeight Initial viewer height\n     * @property {number=} minPixelRatio\n     * @property {number=} defaultZoomLevel Initial zoom level for the viewer\n     * @property {number} [minZoomLevel=1]\n     * @property {string} [keyboardShortcut='m'] The default keyboard shortcut to toggle the magnifier.\n     * @property {'topLeft' | 'full'} [regionMoveHandle='topLeft'] Controls the size of the area that can be used to\n     * move the region around.\n     * @property {'BOTTOM_RIGHT' | 'BOTTOM_LEFT' | 'TOP_RIGHT' | 'TOP_LEFT' | 'ABSOLUTE'} position Position to place the magnifier.\n     * @property {number=} top Required when position is set to 'ABSOLUTE'\n     * @property {number=} left Required when position is set to 'ABSOLUTE'\n     * @property {number=} height Required when position is set to 'ABSOLUTE'\n     * @property {number=} width Required when position is set to 'ABSOLUTE'\n     * @property {boolean} [showMagnifierControl=false] Whether to show a button for toggling the magnifier.\n     * @property {string | HTMLElement} magnifierButton\n     * @property {boolean} [autoResize=true] Whether to automatically resize the inner magnifier view.\n     * @property {boolean} [moveMagnifier=false] Initial value for whether to allow moving the magnifier window.\n     * @property {string} navImages.magnifier.REST\n     * @property {string} navImages.magnifier.GROUP\n     * @property {string} navImages.magnifier.HOVER\n     * @property {string} navImages.magnifier.DOWN\n     */\n\n    /**\n     * @typedef MagnifierControlOptions\n     * @property {OpenSeadragon.ControlAnchor} [anchor=OpenSeadragon.ControlAnchor.NONE]\n     * @property {boolean} [attachToViewer=true]\n     * @property {boolean} [autoFade=true]\n     */\n\n    /**\n     * @typedef MagnifierPrivateOptions\n     * @property {string=} id ID of element to use for the magnifier.\n     * @property {OpenSeadragon.Viewer} viewer Target viewer.\n     * @property {MagnifierControlOptions=} controlOptions Magnifier control options.\n     */\n\n    /**\n     * @typedef MagnifierFields\n     * @property {HTMLElement} element\n     */\n\n    /**\n     * @typedef {MagnifierPublicOptions & MagnifierPrivateOptions & MagnifierFields & OpenSeadragon.Viewer} MagnifierInstance\n     */\n\n    /**\n     * @class Magnifier\n     * @classdesc Allows to view part of the image magnified.\n     * @memberof OpenSeadragon\n     * @param {MagnifierPublicOptions & MagnifierPrivateOptions} options\n     * @this MagnifierInstance\n     */\n    $.Magnifier = function (options) {\n        const viewer = options.viewer;\n        const self = this;\n        let viewerSize;\n        let magnifierSize;\n\n        //We may need to create a new element and id if they did not\n        //provide the id for the existing element\n        if (!options.id) {\n            options.id = 'magnifier-' + $.now();\n            this.element = $.makeNeutralElement('div');\n            options.controlOptions = $.extend(true, {\n                anchor: $.ControlAnchor.BOTTOM_RIGHT,\n                attachToViewer: true,\n                autoFade: false\n            }, options.controlOptions || {});\n\n            if (options.position) {\n                if ('BOTTOM_RIGHT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n                } else if ('BOTTOM_LEFT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n                } else if ('TOP_RIGHT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n                } else if ('TOP_LEFT' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n                } else if ('ABSOLUTE' === options.position) {\n                    options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n                    options.controlOptions.top = options.top;\n                    options.controlOptions.left = options.left;\n                    options.controlOptions.height = options.height;\n                    options.controlOptions.width = options.width;\n                }\n            }\n\n        } else {\n            this.element = document.getElementById(options.id);\n            options.controlOptions = $.extend(true, {\n                anchor: $.ControlAnchor.NONE,\n                attachToViewer: false,\n                autoFade: false,\n            }, options.controlOptions || {});\n        }\n        this.element.id = options.id;\n        this.element.className += ' magnifier';\n\n        options = $.extend(true, {\n            sizeRatio: 0.2,\n            magnifierRotate: true, // @TODO\n            viewerWidth: null,\n            viewerHeight: null,\n            minPixelRatio: viewer.minPixelRatio,\n            defaultZoomLevel: viewer.viewport.getZoom(true) * 2,\n            minZoomLevel: 1,\n            keyboardShortcut: 'm',\n            moveMagnifier: false,\n            navImages: {\n                magnifier: {\n                    REST: 'selection_rest.png',\n                    GROUP: 'selection_grouphover.png',\n                    HOVER: 'selection_hover.png',\n                    DOWN: 'selection_pressed.png'\n                }\n            }\n        }, options, {\n            element: this.element,\n            tabIndex: -1, // No keyboard navigation, omit from tab order\n            //These need to be overridden to prevent recursion since\n            //the magnifier is a viewer and a viewer has a magnifier/navigator\n            showNavigator: false,\n            showNavigationControl: false,\n            showSequenceControl: false,\n            magnifier: null,\n            immediateRender: true,\n            blendTime: 0,\n            animationTime: 0,\n            autoResize: options.autoResize,\n            // prevent resizing the magnifier from adding unwanted space around the image\n            minZoomImageRatio: 1.0,\n        });\n\n        $.setElementTouchActionNone(this.element);\n\n        this.borderWidth = 2;\n        this.viewerWidth = options.viewerWidth;\n        this.viewerHeight = options.viewerHeight;\n\n        //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n        //be a one pixel gap.\n        this.fudge = new $.Point(1, 1);\n        this.totalBorderWidths = new $.Point(this.borderWidth * 2, this.borderWidth * 2).minus(this.fudge);\n\n        if (options.showMagnifierControl || options.magnifierButton) {\n            const prefix = options.prefixUrl || '';\n            const useGroup = viewer.buttons && viewer.buttons.buttons;\n            const anyButton = useGroup ? viewer.buttons.buttons[0] : null;\n            const onFocusHandler = anyButton ? anyButton.onFocus : null;\n            const onBlurHandler = anyButton ? anyButton.onBlur : null;\n\n            viewer.magnifierButton = new $.Button({\n                element: options.magnifierButton ? $.getElement(options.magnifierButton) : null,\n                clickTimeThreshold: viewer.clickTimeThreshold,\n                clickDistThreshold: viewer.clickDistThreshold,\n                tooltip: $.getString('Tooltips.SelectionToggle') || 'Toggle selection',\n                srcRest: prefix + options.navImages.magnifier.REST,\n                srcGroup: prefix + options.navImages.magnifier.GROUP,\n                srcHover: prefix + options.navImages.magnifier.HOVER,\n                srcDown: prefix + options.navImages.magnifier.DOWN,\n                onRelease: this.toggleVisibility.bind(this),\n                onFocus: onFocusHandler,\n                onBlur: onBlurHandler\n            });\n        }\n\n        if (options.controlOptions.anchor !== $.ControlAnchor.NONE) {\n            (function (style, borderWidth) {\n                style.margin = '0px';\n                style.border = borderWidth + 'px solid #555';\n                style.padding = '0px';\n                style.background = '#000';\n                style.overflow = 'hidden';\n                style.minWidth = '50px';\n                style.minHeight = '50px';\n            }(this.element.style, this.borderWidth));\n        }\n\n        this.magnifierResizeHandle = $.makeNeutralElement('div');\n        this.magnifierResizeHandle.id = this.element.id + '-magnifier-resize';\n        this.magnifierResizeHandle.className = 'magnifier-resize';\n        this.magnifierResizeHandle.style.position = 'absolute';\n\n        switch (options.controlOptions.anchor) {\n            case $.ControlAnchor.TOP_LEFT: {\n                this.magnifierResizeHandle.style.bottom = '-1px';\n                this.magnifierResizeHandle.style.right = '-1px';\n                this.magnifierResizeHandle.style.cursor = 'se-resize';\n                break;\n            }\n\n            case $.ControlAnchor.TOP_RIGHT: {\n                this.magnifierResizeHandle.style.bottom = '-1px';\n                this.magnifierResizeHandle.style.left = '-1px';\n                this.magnifierResizeHandle.style.cursor = 'sw-resize';\n                break;\n            }\n\n            case $.ControlAnchor.BOTTOM_LEFT: {\n                this.magnifierResizeHandle.style.top = '-1px';\n                this.magnifierResizeHandle.style.right = '-1px';\n                this.magnifierResizeHandle.style.cursor = 'ne-resize';\n                break;\n            }\n\n            case $.ControlAnchor.BOTTOM_RIGHT:\n            default: {\n                this.magnifierResizeHandle.style.top = '-1px';\n                this.magnifierResizeHandle.style.left = '-1px';\n                this.magnifierResizeHandle.style.cursor = 'nw-resize';\n                break;\n            }\n        }\n\n        this.magnifierResizeHandle.style.width = '10%';\n        this.magnifierResizeHandle.style.height = '10%';\n        this.magnifierResizeHandle.style.maxWidth = '50px';\n        this.magnifierResizeHandle.style.maxHeight = '50px';\n        this.magnifierResizeHandle.style.zIndex = '5'; // we need to be on top of OpenSeadragon\n\n        new $.MouseTracker({\n            element: this.magnifierResizeHandle,\n            dragHandler: event => {\n                const targets = _getAnchorTargets(options.controlOptions.anchor);\n\n                const viewerSize = $.getElementSize(this.viewer.element);\n                const deltaX = event.delta.x * targets.dxFactor;\n                const deltaY = event.delta.y * targets.dyFactor;\n\n                let newWidth = parseInt(this.element.style.width, 10) + deltaX;\n                newWidth = Math.min(newWidth, viewerSize.x * .75);\n                newWidth = Math.max(newWidth, parseInt(this.element.style.minWidth, 10));\n                this.element.style.width = newWidth + 'px';\n\n                let newHeight = parseInt(this.element.style.height, 10) + deltaY;\n                newHeight = Math.min(newHeight, viewerSize.y * .75);\n                newHeight = Math.max(newHeight, parseInt(this.element.style.minHeight, 10));\n                this.element.style.height = newHeight + 'px';\n            },\n        });\n\n        this.element.appendChild(this.magnifierResizeHandle);\n\n        this.magnifierMoveHandle = $.makeNeutralElement('div');\n        this.magnifierMoveHandle.id = this.element.id + '-magnifier-move';\n        this.magnifierMoveHandle.className = 'magnifier-move';\n        this.magnifierMoveHandle.style.display = options.moveMagnifier ? 'block' : 'none';\n        this.magnifierMoveHandle.style.position = 'absolute';\n        this.magnifierMoveHandle.style.top = '-1px';\n        this.magnifierMoveHandle.style.left = '-1px';\n        this.magnifierMoveHandle.style.width = '100%';\n        this.magnifierMoveHandle.style.height = '100%';\n        this.magnifierMoveHandle.style.cursor = 'move';\n        this.magnifierMoveHandle.style.zIndex = '4'; // we need to be on top of OpenSeadragon\n\n        new $.MouseTracker({\n            element: this.magnifierMoveHandle,\n            dragHandler: (event) => {\n                const targets = _getAnchorTargets(this.controlOptions.anchor);\n\n                // Get the current target values\n                let horizontal = Number(this.element.style[targets.hOffset].replace('px', ''));\n                let vertical = Number(this.element.style[targets.vOffset].replace('px', ''));\n\n                // Get the related client rects\n                const clientRect = this.element.getBoundingClientRect();\n                const canvasRect = viewer.canvas.getBoundingClientRect();\n\n                // Get the maximum translation for both directions\n                const maxHorizontal = canvasRect.width - clientRect.width;\n                const maxVertical = canvasRect.height - clientRect.height;\n\n                // Get the correct delta value for given direction\n                const deltaX = event.delta.x * targets.dxFactor;\n                const deltaY = event.delta.y * targets.dyFactor;\n\n                // Clamp translation to min and max values (where is Math.clamp when you need it.)\n                horizontal = Math.min(Math.max(horizontal + deltaX, 0), maxHorizontal);\n                vertical = Math.min(Math.max(vertical + deltaY, 0), maxVertical);\n\n                this.element.style[targets.hOffset] = horizontal + 'px';\n                this.element.style[targets.vOffset] = vertical + 'px';\n\n                this.raiseEvent('magnifier-move', {\n                    originalEvent: event,\n\n                    // Just the info needed for setting back the location.\n                    offset: {\n                        anchor: this.controlOptions.anchor,\n                        [targets.hOffset]: horizontal,\n                        [targets.vOffset]: vertical,\n                    },\n\n                    [targets.hOffset]: horizontal,\n                    [targets.vOffset]: vertical,\n                });\n            },\n        });\n\n        this.element.appendChild(this.magnifierMoveHandle);\n\n        this.displayRegion = $.makeNeutralElement('div');\n        this.displayRegion.id = this.element.id + '-displayregion';\n        this.displayRegion.className = 'displayregion';\n\n        (function (style, borderWidth) {\n            style.position = 'absolute';\n            style.border = borderWidth + 'px solid #900';\n            style.margin = '0px';\n            style.padding = '0px';\n        }(this.displayRegion.style, this.borderWidth));\n\n        this.regionMoveHangle = $.makeNeutralElement('div');\n        this.regionMoveHangle.id = this.element.id + '-displayregion-move';\n        this.regionMoveHangle.className = 'displayregion-move';\n\n        switch (options.regionMoveHandle) {\n            case 'topLeft': {\n                this.regionMoveHangle.style.width = '10%';\n                this.regionMoveHangle.style.height = '10%';\n                this.regionMoveHangle.style.maxWidth = '50px';\n                this.regionMoveHangle.style.maxHeight = '50px';\n                break;\n            }\n\n            case 'full': {\n                this.regionMoveHangle.style.width = '100%';\n                this.regionMoveHangle.style.height = '100%';\n                break;\n            }\n        }\n\n        this.regionMoveHangle.style.cursor = 'move';\n        new $.MouseTracker({\n            element: this.regionMoveHangle,\n            dragHandler: $.delegate(this, moveRegion),\n        });\n\n        this.regionResizeHangle = $.makeNeutralElement('div');\n        this.regionResizeHangle.id = this.element.id + '-displayregion-move';\n        this.regionResizeHangle.className = 'displayregion-move';\n        this.regionResizeHangle.style.position = 'absolute';\n        this.regionResizeHangle.style.bottom = '-1px';\n        this.regionResizeHangle.style.right = '-1px';\n        this.regionResizeHangle.style.width = '10%';\n        this.regionResizeHangle.style.height = '10%';\n        this.regionResizeHangle.style.maxWidth = '50px';\n        this.regionResizeHangle.style.maxHeight = '50px';\n        this.regionResizeHangle.style.cursor = 'se-resize';\n        new $.MouseTracker({\n            element: this.regionResizeHangle,\n            dragHandler: $.delegate(this, resizeRegion),\n        });\n\n        this.displayRegionContainer = $.makeNeutralElement('div');\n        this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n        this.displayRegionContainer.className = 'displayregioncontainer';\n        this.displayRegionContainer.style.width = '0';\n        this.displayRegionContainer.style.height = '0';\n\n        viewer.addControl(\n            this.element,\n            options.controlOptions\n        );\n\n        // TODO this is a hack to handle the elements OSD creates that prevent some pointer events from working\n        //  correctly. Should be replaced with something more native to OSD.\n        requestAnimationFrame(() => {\n            this.element.parentNode.style.pointerEvents = 'none';\n            this.element.parentNode.parentNode.style.pointerEvents = 'none';\n        });\n\n        this._resizeWithViewer = options.controlOptions.anchor !== $.ControlAnchor.ABSOLUTE &&\n            options.controlOptions.anchor !== $.ControlAnchor.NONE;\n\n        if (this._resizeWithViewer) {\n            if (options.width && options.height) {\n                this.element.style.height = typeof (options.height) === 'number' ? (options.height + 'px') : options.height;\n                this.element.style.width = typeof (options.width) === 'number' ? (options.width + 'px') : options.width;\n            } else {\n                viewerSize = $.getElementSize(viewer.element);\n                this.element.style.height = Math.round(viewerSize.y * options.sizeRatio) + 'px';\n                this.element.style.width = Math.round(viewerSize.x * options.sizeRatio) + 'px';\n                this.oldViewerSize = viewerSize;\n            }\n            magnifierSize = $.getElementSize(this.element);\n            this.elementArea = magnifierSize.x * magnifierSize.y;\n        }\n\n        this.oldContainerSize = new $.Point(0, 0);\n\n        $.Viewer.apply(this, [options]);\n\n        this.displayRegion.appendChild(this.regionMoveHangle);\n        this.displayRegion.appendChild(this.regionResizeHangle);\n        this.displayRegionContainer.appendChild(this.displayRegion);\n        viewer.canvas.appendChild(this.displayRegionContainer);\n\n        if (this.keyboardShortcut) {\n            $.addEvent(\n                this.viewer.container,\n                'keypress',\n                $.delegate(this, onKeyPress),\n                false\n            );\n        }\n\n        if (options.magnifierRotate) {\n            viewer.addHandler('rotate', function (args) {\n                const center = viewer.viewport.pixelFromPoint(viewer.viewport.getCenter(), true);\n                self.displayRegionContainer.style.transformOrigin = center.x + 'px ' + center.y + 'px';\n                _setTransformRotate(self.displayRegionContainer, args.degrees);\n                _setTransformRotate(self.displayRegion, -args.degrees);\n                self.viewport.setRotation(args.degrees);\n            });\n        }\n\n        this.addHandler('reset-size', function () {\n            if (self.viewport) {\n                self.viewport.goHome(true);\n            }\n        });\n\n        this.addHandler('update-level', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.addHandler('update-level', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.addHandler('close', function () {\n            self.close();\n        });\n\n        viewer.addHandler('full-page', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.addHandler('full-screen', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.world.addHandler('update-viewport', function () {\n            if (viewer.viewport) {\n                self.update(viewer.viewport);\n            }\n        });\n\n        viewer.world.addHandler('item-index-change', function (event) {\n            const item = self.world.getItemAt(event.previousIndex);\n            self.world.setItemIndex(item, event.newIndex);\n        });\n\n        viewer.world.addHandler('remove-item', function (event) {\n            const theirItem = event.item;\n            const myItem = self._getMatchingItem(theirItem);\n            if (myItem) {\n                self.world.removeItem(myItem);\n            }\n        });\n\n        this.storedBounds = null;\n\n        _setTiledImages(this, viewer);\n\n        this.update(viewer.viewport);\n\n    };\n\n    $.extend($.Magnifier.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Magnifier.prototype */{\n\n        /**\n         * Used to notify the magnifier when its size has changed.\n         * Especially useful when {@link OpenSeadragon.Options}.magnifierAutoResize is set to false and the magnifier is resizable.\n         * @function\n         */\n        updateSize: function () {\n            if (this.viewport) {\n                const containerSize = new $.Point(\n                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n                );\n\n                if (!containerSize.equals(this.oldContainerSize)) {\n                    this.viewport.resize(containerSize, true);\n                    this.viewport.goHome(true);\n                    this.oldContainerSize = containerSize;\n                    this.drawer.clear();\n                    this.world.draw();\n                }\n            }\n        },\n\n        /**\n         * Used to update the magnifier's viewport rectangle when a change in the viewer's viewport occurs.\n         * @function\n         * @param {OpenSeadragon.Viewport} viewport viewport this magnifier is tracking.\n         */\n        update: function (viewport) {\n            const viewerSize = $.getElementSize(this.viewer.element);\n            if (this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals(this.oldViewerSize)) {\n                let newWidth;\n                let newHeight;\n                this.oldViewerSize = viewerSize;\n\n                if (this.maintainSizeRatio || !this.elementArea) {\n                    newWidth = viewerSize.x * this.sizeRatio;\n                    newHeight = viewerSize.y * this.sizeRatio;\n                } else {\n                    newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n                    newHeight = this.elementArea / newWidth;\n                }\n\n                // When dimensions are suplied with the plugin options\n                if (this.viewerWidth && this.viewerHeight) {\n                    newWidth = this.viewerWidth;\n                    newHeight = this.viewerHeight;\n                }\n\n                this.element.style.width = Math.round(newWidth) + 'px';\n                this.element.style.height = Math.round(newHeight) + 'px';\n\n                if (!this.elementArea) {\n                    this.elementArea = newWidth * newHeight;\n                }\n\n                this.updateSize();\n            }\n\n            if (viewport && this.viewport) {\n                const bounds = this.viewport.getBounds(true);\n                const topLeft = viewport.pixelFromPoint(bounds.getTopLeft(), true);\n                const bottomRight = viewport.pixelFromPoint(bounds.getBottomRight(), true)\n                    .minus(this.totalBorderWidths);\n\n                //update style for magnifier-box\n                const style = this.displayRegion.style;\n                style.display = this.world.getItemCount() ? 'block' : 'none';\n\n                style.top = Math.round(topLeft.y) + 'px';\n                style.left = Math.round(topLeft.x) + 'px';\n\n                const width = Math.abs(topLeft.x - bottomRight.x);\n                const height = Math.abs(topLeft.y - bottomRight.y);\n                // make sure width and height are non-negative so IE doesn't throw\n                style.width = Math.round(Math.max(width, 0)) + 'px';\n                style.height = Math.round(Math.max(height, 0)) + 'px';\n\n                this.storedBounds = bounds;\n            }\n\n        },\n\n        // overrides Viewer.addTiledImage\n        addTiledImage: function (options) {\n            const _this = this;\n\n            const original = options.originalTiledImage;\n            delete options.original;\n\n            const optionsClone = $.extend({}, options, {\n                success: function (event) {\n                    const myItem = event.item;\n                    myItem._originalForNavigator = original;\n                    _this._matchBounds(myItem, original, true);\n\n                    original.addHandler('bounds-change', function () {\n                        _this._matchBounds(myItem, original);\n                    });\n                }\n            });\n\n            return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n        },\n\n        toggleVisibility: function () {\n            toggleBlockElement(this.element);\n            toggleBlockElement(this.displayRegionContainer);\n            return this;\n        },\n\n        /**\n         * Enables moving the magnifier itself.\n         */\n        startMagnifierMove() {\n            this.magnifierMoveHandle.style.display = 'block';\n        },\n\n        /**\n         * Disables moving the magnifier itself.\n         */\n        stopMagnifierMove() {\n            this.magnifierMoveHandle.style.display = 'none';\n        },\n\n        /**\n         * @param {OpenSeadragon.ControlAnchor} offset.anchor Saved anchor location.\n         * @param {number=} offset.left Left offset\n         * @param {number=} offset.right Right offset\n         * @param {number=} offset.top Top offset\n         * @param {number=} offset.bottom Bottom offset\n         */\n        loadMagnifierOffset(offset) {\n            const targets = _getAnchorTargets(this.controlOptions.anchor);\n            this.element.style[targets.hOffset] = offset[targets.hOffset] + 'px';\n            this.element.style[targets.vOffset] = offset[targets.vOffset] + 'px';\n        },\n\n        /**\n         * @param theirItem\n         * @returns {OpenSeadragon.TiledImage|null}\n         * @private\n         */\n        _getMatchingItem(theirItem) {\n            const count = this.world.getItemCount();\n            let item;\n\n            for (let i = 0; i < count; i++) {\n                item = this.world.getItemAt(i);\n                if (item._originalForNavigator === theirItem) {\n                    return item;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * @param myItem\n         * @param theirItem\n         * @param immediately\n         * @private\n         */\n        _matchBounds(myItem, theirItem, immediately) {\n            const bounds = theirItem.getBounds();\n            myItem.setPosition(bounds.getTopLeft(), immediately);\n            myItem.setWidth(bounds.width, immediately);\n        },\n    });\n\n    /**\n     * @function\n     * @private\n     * @param {Object} element\n     * @param {Number} degrees\n     */\n    function _setTransformRotate(element, degrees) {\n        element.style.webkitTransform = 'rotate(' + degrees + 'deg)';\n        element.style.mozTransform = 'rotate(' + degrees + 'deg)';\n        element.style.msTransform = 'rotate(' + degrees + 'deg)';\n        element.style.oTransform = 'rotate(' + degrees + 'deg)';\n        element.style.transform = 'rotate(' + degrees + 'deg)';\n    }\n\n    function _setTiledImages(magnifier, viewer) {\n        let tiledImage;\n\n        for (let i = 0; i < viewer.world.getItemCount(); i++) {\n            tiledImage = viewer.world.getItemAt(i);\n            magnifier.world.addItem(cloneTiledImage(magnifier, tiledImage), {});\n        }\n\n        viewer.world.addHandler('add-item', function (event) {\n            magnifier.world.addItem(cloneTiledImage(magnifier, event.item), {\n                index: viewer.world.getIndexOfItem(event.item)\n            });\n\n            if (magnifier.storedBounds) {\n                magnifier.viewport.fitBounds(magnifier.storedBounds, true);\n            }\n        });\n    }\n\n    function _getAnchorTargets(anchor) {\n        const isLeft = anchor === OpenSeadragon.ControlAnchor.TOP_LEFT\n            || anchor === OpenSeadragon.ControlAnchor.BOTTOM_LEFT;\n\n        const isTop = anchor === OpenSeadragon.ControlAnchor.TOP_LEFT\n            || anchor === OpenSeadragon.ControlAnchor.TOP_RIGHT;\n\n        return {\n            hOffset: isLeft ? \"left\" : \"right\",\n            vOffset: isTop? \"top\" : \"bottom\",\n\n            dxFactor: isLeft ? 1 : -1,\n            dyFactor: isTop ? 1 : -1,\n        };\n    }\n\n    function cloneTiledImage(magnifier, tiledImage) {\n        const myItem = new $.TiledImage({\n            viewer: magnifier,\n            source: tiledImage.source,\n            viewport: magnifier.viewport,\n            drawer: magnifier.drawer,\n            tileCache: tiledImage._tileCache,\n            imageLoader: tiledImage._imageLoader,\n            clip: tiledImage._clip,\n            placeholderFillStyle: tiledImage.placeholderFillStyle,\n            opacity: tiledImage.opacity,\n            springStiffness: magnifier.springStiffness,\n            animationTime: magnifier.animationTime,\n            minZoomImageRatio: magnifier.minZoomImageRatio,\n            wrapHorizontal: magnifier.wrapHorizontal,\n            wrapVertical: magnifier.wrapVertical,\n            immediateRender: magnifier.immediateRender,\n            blendTime: magnifier.blendTime,\n            alwaysBlend: magnifier.alwaysBlend,\n            minPixelRatio: magnifier.minPixelRatio,\n            smoothTileEdgesMinZoom: magnifier.smoothTileEdgesMinZoom,\n            crossOriginPolicy: magnifier.crossOriginPolicy,\n            debugMode: magnifier.debugMode\n        });\n        myItem._originalForNavigator = tiledImage;\n        magnifier._matchBounds(myItem, tiledImage, true);\n\n        tiledImage.addHandler('bounds-change', function () {\n            magnifier._matchBounds(myItem, tiledImage);\n        });\n\n        return myItem;\n    }\n\n    function moveRegion(event) {\n        if (this.viewport) {\n            if (!this.panHorizontal) {\n                event.delta.x = 0;\n            }\n            if (!this.panVertical) {\n                event.delta.y = 0;\n            }\n            this.viewport.panBy(\n                this.viewer.viewport.deltaPointsFromPixels(\n                    event.delta\n                ),\n                true\n            );\n\n            // store position\n        }\n    }\n\n    function resizeRegion(event) {\n        const bounds = this.viewport.getBounds(true);\n        const topLeft = this.viewer.viewport.pixelFromPoint(bounds.getTopLeft(), true);\n        const bottomRight = this.viewer.viewport\n            .pixelFromPoint(bounds.getBottomRight(), true)\n            .minus(this.totalBorderWidths);\n\n        const width = Math.abs(topLeft.x - bottomRight.x);\n        const height = Math.abs(topLeft.y - bottomRight.y);\n        const delta = (event.delta.x / width) + (event.delta.y / height);\n        const zoom = this.viewport.getZoom(true) * (1 - delta);\n\n        if (zoom > this.minZoomImageRatio && zoom < this.viewport.getMaxZoom()) {\n            this.viewport.zoomTo(zoom, undefined, true);\n        }\n    }\n\n    function onKeyPress(e) {\n        const key = e.keyCode || e.charCode;\n        if (String.fromCharCode(key) === this.keyboardShortcut) {\n            this.toggleVisibility();\n        }\n    }\n\n    function toggleBlockElement(el) {\n        el.style.display = el.style.display === 'none' ? 'block' : 'none';\n    }\n\n})(OpenSeadragon);\n"],"names":["$","version","major","Error","_setTransformRotate","element","degrees","style","webkitTransform","mozTransform","msTransform","oTransform","transform","_getAnchorTargets","anchor","isLeft","OpenSeadragon","ControlAnchor","TOP_LEFT","BOTTOM_LEFT","isTop","TOP_RIGHT","hOffset","vOffset","dxFactor","dyFactor","cloneTiledImage","magnifier","tiledImage","myItem","TiledImage","viewer","source","viewport","drawer","tileCache","_tileCache","imageLoader","_imageLoader","clip","_clip","placeholderFillStyle","opacity","springStiffness","animationTime","minZoomImageRatio","wrapHorizontal","wrapVertical","immediateRender","blendTime","alwaysBlend","minPixelRatio","smoothTileEdgesMinZoom","crossOriginPolicy","debugMode","_originalForNavigator","_matchBounds","addHandler","moveRegion","event","this","panHorizontal","delta","x","panVertical","y","panBy","deltaPointsFromPixels","resizeRegion","bounds","getBounds","topLeft","pixelFromPoint","getTopLeft","bottomRight","getBottomRight","minus","totalBorderWidths","width","Math","abs","height","zoom","getZoom","getMaxZoom","zoomTo","undefined","onKeyPress","e","key","keyCode","charCode","String","fromCharCode","keyboardShortcut","toggleVisibility","toggleBlockElement","el","display","Viewer","prototype","options","magnifierInstance","Magnifier","self","viewerSize","magnifierSize","id","document","getElementById","controlOptions","extend","NONE","attachToViewer","autoFade","now","makeNeutralElement","BOTTOM_RIGHT","position","ABSOLUTE","top","left","className","sizeRatio","magnifierRotate","viewerWidth","viewerHeight","defaultZoomLevel","minZoomLevel","moveMagnifier","navImages","REST","GROUP","HOVER","DOWN","tabIndex","showNavigator","showNavigationControl","showSequenceControl","autoResize","setElementTouchActionNone","borderWidth","fudge","Point","showMagnifierControl","magnifierButton","prefix","prefixUrl","anyButton","buttons","onFocusHandler","onFocus","onBlurHandler","onBlur","Button","getElement","clickTimeThreshold","clickDistThreshold","tooltip","getString","srcRest","srcGroup","srcHover","srcDown","onRelease","bind","margin","border","padding","background","overflow","minWidth","minHeight","magnifierResizeHandle","bottom","right","cursor","maxWidth","maxHeight","zIndex","MouseTracker","dragHandler","targets","getElementSize","deltaX","deltaY","newWidth","parseInt","min","max","newHeight","appendChild","magnifierMoveHandle","horizontal","Number","replace","vertical","clientRect","getBoundingClientRect","canvasRect","canvas","maxHorizontal","maxVertical","raiseEvent","originalEvent","offset","displayRegion","regionMoveHangle","regionMoveHandle","delegate","regionResizeHangle","displayRegionContainer","addControl","requestAnimationFrame","parentNode","pointerEvents","_resizeWithViewer","round","oldViewerSize","elementArea","oldContainerSize","apply","addEvent","container","args","center","getCenter","transformOrigin","setRotation","goHome","update","close","world","item","getItemAt","previousIndex","setItemIndex","newIndex","theirItem","_getMatchingItem","removeItem","storedBounds","i","getItemCount","addItem","index","getIndexOfItem","fitBounds","_setTiledImages","updateSize","containerSize","clientWidth","clientHeight","equals","resize","clear","draw","maintainSizeRatio","sqrt","addTiledImage","_this","original","originalTiledImage","optionsClone","success","startMagnifierMove","stopMagnifierMove","loadMagnifierOffset","count","immediately","setPosition","setWidth"],"mappings":"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"}